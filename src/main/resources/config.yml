# TownyPolitical 插件配置文件
# 请仔细阅读各项注释以了解其作用。
# 你可以在服务器运行时修改此文件，然后使用 /tp reload 命令重载配置 (部分设置可能需要重启生效)。

# 常规设置
general:
  # 插件调试模式，开启后会在控制台输出更详细的日志，用于开发或问题排查。
  # 生产环境建议设为 false。
  debug-mode: false
  # 插件消息的默认时区。使用标准的Java时区ID (例如 "UTC", "Asia/Shanghai", "America/New_York")。
  # 如果留空或无效，则使用服务器的默认时区。
  time_zone: "" # 例如: "UTC"
  # 插件消息中日期时间的显示格式。使用 Java SimpleDateFormat 格式。
  # 示例: "yyyy-MM-dd HH:mm:ss z", "yyyy年MM月dd日 HH:mm"
  date_format: "yyyy-MM-dd HH:mm:ss z"

# 经济相关设置
economy:
  # 费用是否从 Towny 的国家银行账户中扣除 (如果适用，例如更改国家政体费用)。
  # 如果为 false，或者国家银行不可用/资金不足，插件可能会尝试从操作者个人账户 (通过Vault) 扣款。
  use_towny_nation_bank: true

# 政党 (Party) 相关配置
party:
  # 创建新政党所需的资金。如果为0或经济系统未启用，则不花费。
  creation_cost: 1000.0
  # 政党改名所需的资金。
  rename_cost: 500.0
  # 政党名称设置
  name:
    min_length: 3             # 政党名称最小长度 (字符数)
    max_length: 16            # 政党名称最大长度 (字符数)
    # 用于验证政党名称的正则表达式 (高级选项，谨慎修改)。
    # 默认允许: 字母 (a-z, A-Z), 数字 (0-9), 下划线 (_), 以及中文字符。
    # 注意: Java的正则表达式需要对某些特殊字符进行转义 (例如 `\` 写为 `\\`)。
    regex: "^[a-zA-Z0-9_\\u4e00-\\u9fa5]+$"
  # 每个政党的最大成员数量 (包括领袖、管理员、普通成员，不包括申请者)。
  # 设置为 0 表示无限制。
  max_members: 50
  # 当政党解散时，是否向全服广播通知。
  broadcast_disband: false
  # 政党领袖选举 (如果启用党内自动选举周期)
  leader_election:
    # 自动安排党内领袖选举的间隔天数。
    # 设置为 0 表示禁用自动周期性选举，只能通过命令或手动方式触发。
    auto_schedule_interval_days: 0
    # 候选人登记阶段的持续时间 (单位: 秒)。
    registration_duration_seconds: 43200 # 12 小时
    # 投票阶段的持续时间 (单位: 秒)。
    voting_duration_seconds: 86400    # 24 小时
    # 政党至少需要有多少名正式成员，才会触发自动的周期性领袖选举。
    min_members_to_auto_elect: 5

# 国家 (Nation) 及政体 (Government) 相关配置
nation:
  # 更改国家政体的花费。可以为特定政体定义不同费用。
  government_change_cost:
    default: 2500.0                     # 更改为大部分政体的默认花费
    ABSOLUTE_MONARCHY: 10000.0          # 示例：更改为“君主专制”的特殊花费
    CONSTITUTIONAL_MONARCHY: 3000.0
    PARLIAMENTARY_REPUBLIC: 2500.0
    SEMI_PRESIDENTIAL_REPUBLIC: 3500.0
    PRESIDENTIAL_REPUBLIC: 3500.0
  # 君主专制 (Absolute Monarchy) 政体的特殊效果
  absolute_monarchy:
    # 国家操作 (如Towny建城、宣战、维护费等，需要具体集成点) 的金钱花费乘数。
    # 例如，1.25 表示花费增加 25%。设置为 1.0 则无影响。
    # 注意：此功能的具体实现需要插件在Towny的相关花费点进行拦截和修改，
    # 或者通过SiegeWar等其他插件的API（如果它们支持外部修改花费的接口）。
    # 本插件目前仅提供此配置项，实际效果取决于进一步的集成开发。
    cost_multiplier: 1.25
    # 在君主专制政体下，是否禁止成立新的政党或限制现有政党参与政治活动。
    # 如果为 true，可能会阻止创建新党，或阻止非“皇室指定”的党派参与选举（如果实现了此类逻辑）。
    restrict_party_politics: false

# 选举 (Election) 相关配置
elections:
  # 国家级选举 (议会/总统) 的各阶段默认持续时间 (单位: 秒)。
  # 这些值会被用于由本插件发起的选举。
  registration_duration_seconds: 86400  # 候选人登记阶段: 24 小时
  voting_duration_seconds: 172800       # 投票阶段: 48 小时
  # 选举结果公示期 (单位: 秒)。在此期间，选举结果可见但选举对象仍被认为是“活跃”的。
  # 之后，选举对象会被归档。设置为 0 表示立即归档。
  results_display_duration_seconds: 43200 # 12 小时

  # 国家级选举的调度周期 (单位: 天)。
  # interval_days 设置为 0 表示该类型的选举不自动按周期调度，只能通过管理员命令手动开启。
  nation_election_schedule:
    parliamentary: # 议会选举 (用于 议会制共和制、君主立宪制、半总统制)
      interval_days: 30
      # 至少需要有多少个符合条件的政党宣布参选（或被认为会自动参选），选举才会自动开始。
      # (此功能较复杂，当前简化为检查服务器总政党数，未来可细化)
      min_participating_parties_to_start: 1
    presidential: # 总统选举 (用于 总统制共和制、半总统制)
      interval_days: 60
      # 至少需要有多少名合格候选人报名登记，选举才会从登记阶段进入投票阶段。
      # 如果登记结束时候选人数量少于此值，选举可能会被取消。
      min_candidates_for_voting_stage: 1 # 若为0或1，只要有候选人就进入投票

  # 议会选举特定配置
  parliament:
    # 默认的议会总席位数。
    # 未来可以扩展为基于国家规模/人口动态计算，或为每个国家单独配置。
    total_seats: 100
    # 议会席位分配的得票率门槛 (百分比)。
    # 政党需要在全国总有效票数中达到此百分比，才有资格参与席位分配。
    # 例如，设置为 5.0 表示需要至少 5% 的选票。设置为 0 则无门槛。
    representation_threshold_percent: 0.0
    # 席位分配方法 (当前硬编码为 LARGEST_REMAINDER_HARE - 最大余额法/黑尔数额)。
    # 未来可选项: "D_HONDT", "SAINTE_LAGUE"
    # seat_allocation_method: "LARGEST_REMAINDER_HARE"

  # 候选人与投票资格相关
  allow_independent_candidates: # 是否允许无党派人士 (未加入任何Party) 参选
    parliamentary: false # 议会选举通常要求候选人有政党背景
    presidential: true   # 总统选举通常允许独立候选人
  # 投票资格：是否要求玩家必须在国家首都城镇拥有地块 (除了是国家公民外才能投票)
  # require_plot_in_capital_to_vote: false # (当前未实现此检查)
  # 候选人资格：是否要求候选人必须是其所代表政党的领袖才能参加国家级选举
  # require_party_leader_for_national_candidacy: false # (当前未实现此检查)

  # 选举平票处理机制 (用于总统选举或党内领袖选举等单席位选举)
  # 可选值:
  #   "RANDOM": 从平票者中随机选择一位获胜者。
  #   "RE_ELECTION": (未完全实现) 尝试为平票者举行一次决选。
  #   "ADMIN_DECIDES": (未完全实现) 选举状态将变为 AWAITING_TIE_RESOLUTION，并通知管理员，等待管理员通过命令指定获胜者。
  tie_breaking_method: "RANDOM"

# GUI 相关配置 (由于决定暂时不做GUI，此部分可以注释掉或留空，但保留结构以备未来)
gui:
# 议会席位图表中代表不同党派的色块材料 (Minecraft Material 名称)
# 顺序对应政党获得席位的多少，或者可以给每个政党自定义颜色
# party_seat_colors:
#   - "RED_WOOL"
#   - "BLUE_WOOL"
#   - "GREEN_WOOL"
#   - "YELLOW_WOOL"
#   - "ORANGE_WOOL"
#   - "PURPLE_WOOL"
#   - "LIME_WOOL"
#   - "PINK_WOOL"
#   - "CYAN_WOOL"
#   - "MAGENTA_WOOL"

# (如果未来有GUI) GUI 刷新间隔 (单位: tick, 20 ticks = 1 second)
# refresh_interval_ticks: 100 # 5 seconds